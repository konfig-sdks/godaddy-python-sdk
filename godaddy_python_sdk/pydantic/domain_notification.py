# coding: utf-8

"""
    All the help and tools you need to grow online: Websites, Domains, Digital and Social Marketing - plus GoDaddy Guides with you every step of the way.

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class DomainNotification(BaseModel):
    # The date the notification was added
    added_at: str = Field(alias='addedAt')

    # The notification ID to be used in POST /v2/customers/{customerId}/domains/notifications to acknowledge the notification
    notification_id: str = Field(alias='notificationId')

    # The resource the notification pertains to.
    resource: str = Field(alias='resource')

    # The type of resource the notification relates to
    resource_type: Literal["CONTACT", "DOMAIN", "HOST"] = Field(alias='resourceType')

    # The resulting status of the action.
    status: Literal["AWAITING", "CANCELLED", "FAILED", "PENDING", "SUCCESS"] = Field(alias='status')

    # The type of action the notification relates to
    type: Literal["AUTH_CODE_PURCHASE", "AUTH_CODE_REGENERATE", "AUTO_RENEWAL", "BACKORDER", "BACKORDER_PURCHASE", "BACKORDER_DELETE", "BACKORDER_UPDATE", "CONTACT_CREATE", "CONTACT_DELETE", "CONTACT_UPDATE", "DNS_VERIFICATION", "DNSSEC_CREATE", "DNSSEC_DELETE", "DOMAIN_DELETE", "DOMAIN_UPDATE", "DOMAIN_UPDATE_CONTACTS", "DOMAIN_UPDATE_NAME_SERVERS", "EXPIRY", "HOST_CREATE", "HOST_DELETE", "ICANN_VERIFICATION", "MIGRATE", "MIGRATE_IN", "PREMIUM", "PRIVACY_PURCHASE", "PRIVACY_DELETE", "REDEEM", "REGISTER", "RENEW", "RENEW_UNDO", "TRADE", "TRADE_CANCEL", "TRADE_PURCHASE", "TRADE_PURCHASE_AUTH_TEXT_MESSAGE", "TRADE_RESEND_AUTH_EMAIL", "TRANSFER", "TRANSFER_IN", "TRANSFER_IN_ACCEPT", "TRANSFER_IN_CANCEL", "TRANSFER_IN_RESTART", "TRANSFER_IN_RETRY", "TRANSFER_OUT", "TRANSFER_OUT_ACCEPT", "TRANSFER_OUT_REJECT", "TRANSFER_OUT_REQUESTED", "TRANSIT"] = Field(alias='type')

    # The notification data for the given type as specifed by GET /v2/customers/{customerId}/domains/notifications/schema
    metadata: typing.Optional[typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]] = Field(None, alias='metadata')

    # A client provided identifier (via X-Request-Id header) indicating the request this notification is for
    request_id: typing.Optional[str] = Field(None, alias='requestId')
    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
